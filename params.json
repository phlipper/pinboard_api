{"body":"# PinboardApi [![Build Status](https://secure.travis-ci.org/phlipper/pinboard_api.png?branch=master)](http://travis-ci.org/phlipper/pinboard_api) [![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/phlipper/pinboard_api)\r\n\r\n## Description\r\n\r\nA Ruby API client for [Pinboard.in](https://pinboard.in/), the bookmarking website for introverted people in a hurry.\r\n\r\nThis client aims to cover all of the Pinboard [API v1](https://pinboard.in/api/).\r\n\r\n\r\n## Requirements\r\n\r\n* You must have a paid Pinboard account to use the API. It is a great service and you can [signup here](https://pinboard.in/signup/) if you don't already have an account.\r\n* Currently tested on the following Ruby versions:\r\n  * 1.9.2\r\n  * 1.9.3\r\n  * JRuby (1.9 mode)\r\n\r\n_Note:_ Specs are currently passing on Rubinius with `RBXOPT=-X19` on my local machine but there is a failing spec on [Travis CI](http://travis-ci.org/#!/phlipper/pinboard_api). I will update the `README` with official support for Rubinus once everything runs smoothly on Travis.\r\n\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem \"pinboard_api\"\r\n```\r\n\r\nAnd then execute:\r\n\r\n```\r\n$ bundle\r\n```\r\n\r\nOr install it yourself as:\r\n\r\n```\r\n$ gem install pinboard_api\r\n```\r\n\r\n\r\n## Getting Started\r\n\r\nYou will need to set your username and password for the Pinboard service:\r\n\r\n```ruby\r\nPinboardApi.username = \"phlipper\"\r\nPinboardApi.password = \"[REDACTED]\"\r\n```\r\n\r\nAlternately, you may use the new [`auth_token`](http://pinboard.in/api/#authentication) method:\r\n\r\n```ruby\r\nPinboardApi.auth_token = \"[REDACTED]\"\r\n```\r\n\r\nYou may also set the SSL options which will be passed through to [Faraday](https://github.com/technoweenie/faraday#readme):\r\n\r\n```ruby\r\nPinboardApi.ssl_options = { ca_file: \"/opt/local/share/curl/curl-ca-bundle.crt\" }\r\n```\r\n\r\n\r\n## Usage\r\n\r\nThe `PinboardApi` namespace implements the 3 primary object types: `Post`, `Tag`, and `User`.\r\n\r\n\r\n### Post\r\n\r\n\r\n* [posts/update](https://pinboard.in/api#update) - Check to see when a user last posted an item.\r\n\r\n```ruby\r\nPinboardApi::Post.last_update\r\n# => 2012-07-07 04:18:28 UTC\r\n```\r\n\r\n* [posts/add](https://pinboard.in/api#posts_add) - add a new bookmark\r\n\r\n```ruby\r\nattributes = { url: \"http://phlippers.net/pinboard_api\", description: \"A Ruby client for the Pinboard.in API\", tags: %[ruby awesomesauce] }\r\n\r\npost = PinboardApi::Post.new(attributes)\r\npost.save\r\n# => #<PinboardApi::Post:0x007fb42d905a68 @description=\"A Ruby client for the Pinboard.in API\", @extended=nil, @hash=nil, @meta=nil, @url=\"http://phlippers.net/pinboard_api\", @tags=\"ruby awesomesauce\", @time=2012-07-13 23:03:34 -0700>\r\n\r\npost = PinboardApi::Post.new\r\npost.url = attributes[:url]\r\npost.description = attributes[:description]\r\npost.save\r\n\r\nPinboardApi::Post.create(attributes)\r\n```\r\n\r\n* [posts/delete](https://pinboard.in/api#posts_delete) - delete an existing bookmark\r\n\r\n```ruby\r\npost = PinboardApi::Post.find(url: \"https://pinboard.in/u:phlipper\").first\r\npost.destroy\r\n# => #<PinboardApi::Post:0x007ffcb5166cf0 @description=\"Pinboard - antisocial bookmarking\", @extended=\"\", @hash=\"bc857ba651d134be0c9a5267e943c3ce\", @url=\"https://pinboard.in/u:phlipper\", @meta=nil, @tags=\"test\", @time=\"2012-07-11T09:16:14Z\">\r\n\r\nPinboardApi::Post.destroy(\"https://pinboard.in/u:phlipper\")\r\n# => #<PinboardApi::Post:0x007f98d6946d78 @description=\"Pinboard - antisocial bookmarking\", @extended=\"\", @hash=\"bc857ba651d134be0c9a5267e943c3ce\", @url=\"https://pinboard.in/u:phlipper\", @meta=nil, @tags=\"test\", @time=\"2012-07-11T09:17:36Z\">\r\n```\r\n\r\n* [posts/get](https://pinboard.in/api#posts_get) - get bookmark for a single date, or fetch specific items by URL\r\n\r\n```ruby\r\nPinboardApi::Post.find(tag: \"test\")\r\n# => [#<PinboardApi::Post:0x007fdce4547388 @description=\"Test.com – Certification Program Management – Create Online Tests with This Authoring, Management, Training and E-Learning Software\", @extended=\"\", @hash=\"dbb720d788ffaeb0afb7572104072f4a\", @url=\"http://test.com/\", @tags=\"test junk\", @time=\"2012-07-07T04:18:28Z\">, ...]\r\n\r\nPinboardApi::Post.find(hash: \"dbb720d788ffaeb0afb7572104072f4a\", meta: \"yes\")\r\nPinboardApi::Post.find(dt: Date.parse(\"2012-07-07\"))\r\n```\r\n\r\n* [posts/dates](https://pinboard.in/api#posts_dates) - list dates on which bookmarks were posted\r\n\r\n```ruby\r\nPinboardApi::Post.dates\r\n# => [{\"count\"=>1, \"date\"=>#<Date: 2012-07-10 ((2456119j,0s,0n),+0s,2299161j)>}, {\"count\"=>3, \"date\"=>#<Date: 2012-07-08 ((2456117j,0s,0n),+0s,2299161j)>}, ...]\r\n\r\nPinboardApi::Post.dates(tag: \"ruby\")\r\n```\r\n\r\n* [posts/recent](https://pinboard.in/api#posts_recent) - fetch recent bookmarks\r\n\r\n```ruby\r\nPinboardApi::Post.recent\r\n# => [#<PinboardApi::Post:0x007ffe150e1fd0 @description=\"Techniques to Secure Your Website with Ruby on Rails...\"> ...]\r\n\r\nPinboardApi::Post.recent(count: 3)\r\nPinboardApi::Post.recent(tag: \"ruby\")\r\nPinboardApi::Post.recent(count: 25, tag: [\"ruby\", \"programming\"])\r\n```\r\n\r\n* [posts/all](https://pinboard.in/api#posts_all) - fetch all bookmarks by date, tag, or range\r\n\r\n```ruby\r\nPinboardApi::Post.all\r\n# => [#<PinboardApi::Post:0x007ffe150e1fd0 @description=\"Techniques to Secure Your Website with Ruby on Rails...\"> ...]\r\n\r\nPinboardApi::Post.all(tag: %w[ruby programming], meta: true, results: 30)\r\nPinboardApi::Post.all(start: 50, fromdt: 2.weeks.ago, todt: 1.week.ago)\r\n```\r\n\r\n* [posts/suggest](https://pinboard.in/api#posts_suggest) - fetch popular and recommended tags for a url\r\n\r\n```ruby\r\nPinboardApi::Post.suggest(\"http://blog.com\")\r\n# => {\"popular\"=>[\"hosting\", \"blogs\", \"blog\", \"free\"], \"recommended\"=>[\"blog\", \"blogging\", \"blogs\", \"free\"]}\r\n```\r\n\r\n\r\n### Tag\r\n\r\n* [tags/get](https://pinboard.in/api#tags_get) - fetch all tags\r\n\r\n```ruby\r\nPinboardApi::Tag.all\r\n# => [#<PinboardApi::Tag:0x007fdce41f4f00 @name=\"leadership\", @count=1>, #<PinboardApi::Tag:0x007fdce41f4e10 @name=\"date\", @count=1>, ... ]\r\n\r\nPinboardApi::Tag.find(\"leadership\")\r\n# => #<PinboardApi::Tag:0x007fdce4827eb8 @name=\"leadership\", @count=1>\r\n```\r\n\r\n* [tags/delete](https://pinboard.in/api#tags_delete) - delete a tag from all bookmarks\r\n\r\n```ruby\r\ntag = PinboardApi::Tag.find(\"foo\")\r\ntag.destroy\r\n# => #<PinboardApi::Tag:0x007fdce45f56e0 @name=\"foo\", @count=1>\r\n\r\nPinboardApi::Tag.destroy(\"foo\")\r\n# => #<PinboardApi::Tag:0x007fdce45f20f8 @name=\"foo\", @count=1>\r\n```\r\n\r\n* [tags/rename](https://pinboard.in/api#tags_rename) - rename a tag\r\n\r\n```ruby\r\ntag = PinboardApi::Tag.find(\"foo\")\r\n# => #<PinboardApi::Tag:0x007fdce461bcc8 @name=\"foo\", @count=1>\r\n\r\ntag.rename(\"foo2\")\r\n# => #<PinboardApi::Tag:0x007fdce4c4bb48 @name=\"foo2\", @count=1>\r\n```\r\n\r\n\r\n### User\r\n\r\n* [user/secret](https://pinboard.in/api#user_secret) - get the secret RSS token (allows viewing user's private RSS feeds)\r\n\r\n```ruby\r\nPinboardApi::User.secret\r\n# => \"c3b0f4073ea37c4b1df5\"\r\n```\r\n\r\n\r\n## TODO\r\n\r\n* Implement support for rate limiting\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n\r\n## License\r\n\r\n**pinboard_api**\r\n\r\n* Freely distributable and licensed under the [MIT license](http://phlipper.mit-license.org/2012/license.html).\r\n* Copyright (c) 2012 Phil Cohen (github@phlippers.net) [![endorse](http://api.coderwall.com/phlipper/endorsecount.png)](http://coderwall.com/phlipper)\r\n* http://phlippers.net/\r\n","tagline":"A Ruby client for the Pinboard.in API","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"PinboardAPI","google":"UA-10172882-2"}